In archive lib_linux/libpca9685.a:

pca9685servo.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <PCA9685Servo::PCA9685Servo(unsigned char)>:
   0:	b510      	push	{r4, lr}
   2:	4604      	mov	r4, r0
   4:	f7ff fffe 	bl	0 <PCA9685::PCA9685(unsigned char)>
   8:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   c:	f44f 63fa 	mov.w	r3, #2000	; 0x7d0
  10:	8062      	strh	r2, [r4, #2]
  12:	4620      	mov	r0, r4
  14:	80a3      	strh	r3, [r4, #4]
  16:	2100      	movs	r1, #0
  18:	f7ff fffe 	bl	0 <PCA9685::SetInvert(bool)>
  1c:	2101      	movs	r1, #1
  1e:	4620      	mov	r0, r4
  20:	f7ff fffe 	bl	0 <PCA9685::SetOutDriver(bool)>
  24:	2132      	movs	r1, #50	; 0x32
  26:	4620      	mov	r0, r4
  28:	f7ff fffe 	bl	0 <PCA9685::SetFrequency(unsigned short)>
  2c:	8863      	ldrh	r3, [r4, #2]
  2e:	eeb6 3b00 	vmov.f64	d3, #96	; 0x3f000000  0.5
  32:	ed9f 7b15 	vldr	d7, [pc, #84]	; 88 <PCA9685Servo::PCA9685Servo(unsigned char)+0x88>
  36:	4620      	mov	r0, r4
  38:	ee04 3a10 	vmov	s8, r3
  3c:	88a3      	ldrh	r3, [r4, #4]
  3e:	ed9f 2b14 	vldr	d2, [pc, #80]	; 90 <PCA9685Servo::PCA9685Servo(unsigned char)+0x90>
  42:	ee05 3a10 	vmov	s10, r3
  46:	eeb8 4bc4 	vcvt.f64.s32	d4, s8
  4a:	eeb8 5bc5 	vcvt.f64.s32	d5, s10
  4e:	ee24 4b07 	vmul.f64	d4, d4, d7
  52:	ee25 5b07 	vmul.f64	d5, d5, d7
  56:	ee84 6b02 	vdiv.f64	d6, d4, d2
  5a:	ee85 7b02 	vdiv.f64	d7, d5, d2
  5e:	ee36 6b03 	vadd.f64	d6, d6, d3
  62:	ee37 7b03 	vadd.f64	d7, d7, d3
  66:	eefc 6bc6 	vcvt.u32.f64	s13, d6
  6a:	eefc 7bc7 	vcvt.u32.f64	s15, d7
  6e:	ee16 2a90 	vmov	r2, s13
  72:	ee17 3a90 	vmov	r3, s15
  76:	80e2      	strh	r2, [r4, #6]
  78:	8123      	strh	r3, [r4, #8]
  7a:	bd10      	pop	{r4, pc}
  7c:	4620      	mov	r0, r4
  7e:	f7ff fffe 	bl	0 <PCA9685::~PCA9685()>
  82:	f7ff fffe 	bl	0 <__cxa_end_cleanup>
  86:	bf00      	nop
  88:	9999999a 	ldmibls	r9, {r1, r3, r4, r7, r8, fp, ip, pc}
  8c:	40699999 	mlsmi	r9, r9, r9, r9
  90:	00000000 	andeq	r0, r0, r0
  94:	408f4000 	addmi	r4, pc, r0

00000098 <PCA9685Servo::~PCA9685Servo()>:
  98:	b510      	push	{r4, lr}
  9a:	4604      	mov	r4, r0
  9c:	f7ff fffe 	bl	0 <PCA9685::~PCA9685()>
  a0:	4620      	mov	r0, r4
  a2:	bd10      	pop	{r4, pc}

000000a4 <PCA9685Servo::SetLeftUs(unsigned short)>:
  a4:	ee07 1a90 	vmov	s15, r1
  a8:	8041      	strh	r1, [r0, #2]
  aa:	ed9f 6b0b 	vldr	d6, [pc, #44]	; d8 <PCA9685Servo::SetLeftUs(unsigned short)+0x34>
  ae:	eeb8 7be7 	vcvt.f64.s32	d7, s15
  b2:	ed9f 5b0b 	vldr	d5, [pc, #44]	; e0 <PCA9685Servo::SetLeftUs(unsigned short)+0x3c>
  b6:	ee27 7b06 	vmul.f64	d7, d7, d6
  ba:	ee87 6b05 	vdiv.f64	d6, d7, d5
  be:	eeb6 7b00 	vmov.f64	d7, #96	; 0x3f000000  0.5
  c2:	ee36 7b07 	vadd.f64	d7, d6, d7
  c6:	eefc 7bc7 	vcvt.u32.f64	s15, d7
  ca:	ee17 3a90 	vmov	r3, s15
  ce:	80c3      	strh	r3, [r0, #6]
  d0:	4770      	bx	lr
  d2:	bf00      	nop
  d4:	f3af 8000 	nop.w
  d8:	9999999a 	ldmibls	r9, {r1, r3, r4, r7, r8, fp, ip, pc}
  dc:	40699999 	mlsmi	r9, r9, r9, r9
  e0:	00000000 	andeq	r0, r0, r0
  e4:	408f4000 	addmi	r4, pc, r0

000000e8 <PCA9685Servo::GetLeftUs() const>:
  e8:	8840      	ldrh	r0, [r0, #2]
  ea:	4770      	bx	lr

000000ec <PCA9685Servo::SetRightUs(unsigned short)>:
  ec:	ee07 1a90 	vmov	s15, r1
  f0:	8081      	strh	r1, [r0, #4]
  f2:	ed9f 6b0b 	vldr	d6, [pc, #44]	; 120 <PCA9685Servo::SetRightUs(unsigned short)+0x34>
  f6:	eeb8 7be7 	vcvt.f64.s32	d7, s15
  fa:	ed9f 5b0b 	vldr	d5, [pc, #44]	; 128 <PCA9685Servo::SetRightUs(unsigned short)+0x3c>
  fe:	ee27 7b06 	vmul.f64	d7, d7, d6
 102:	ee87 6b05 	vdiv.f64	d6, d7, d5
 106:	eeb6 7b00 	vmov.f64	d7, #96	; 0x3f000000  0.5
 10a:	ee36 7b07 	vadd.f64	d7, d6, d7
 10e:	eefc 7bc7 	vcvt.u32.f64	s15, d7
 112:	ee17 3a90 	vmov	r3, s15
 116:	8103      	strh	r3, [r0, #8]
 118:	4770      	bx	lr
 11a:	bf00      	nop
 11c:	f3af 8000 	nop.w
 120:	9999999a 	ldmibls	r9, {r1, r3, r4, r7, r8, fp, ip, pc}
 124:	40699999 	mlsmi	r9, r9, r9, r9
 128:	00000000 	andeq	r0, r0, r0
 12c:	408f4000 	addmi	r4, pc, r0

00000130 <PCA9685Servo::GetRightUs() const>:
 130:	8880      	ldrh	r0, [r0, #4]
 132:	4770      	bx	lr

00000134 <PCA9685Servo::CalcLeftCount()>:
 134:	8843      	ldrh	r3, [r0, #2]
 136:	ed9f 7b0c 	vldr	d7, [pc, #48]	; 168 <PCA9685Servo::CalcLeftCount()+0x34>
 13a:	ee06 3a10 	vmov	s12, r3
 13e:	ed9f 5b0c 	vldr	d5, [pc, #48]	; 170 <PCA9685Servo::CalcLeftCount()+0x3c>
 142:	eeb8 6bc6 	vcvt.f64.s32	d6, s12
 146:	ee26 6b07 	vmul.f64	d6, d6, d7
 14a:	ee86 7b05 	vdiv.f64	d7, d6, d5
 14e:	eeb6 6b00 	vmov.f64	d6, #96	; 0x3f000000  0.5
 152:	ee37 7b06 	vadd.f64	d7, d7, d6
 156:	eefc 7bc7 	vcvt.u32.f64	s15, d7
 15a:	ee17 3a90 	vmov	r3, s15
 15e:	80c3      	strh	r3, [r0, #6]
 160:	4770      	bx	lr
 162:	bf00      	nop
 164:	f3af 8000 	nop.w
 168:	9999999a 	ldmibls	r9, {r1, r3, r4, r7, r8, fp, ip, pc}
 16c:	40699999 	mlsmi	r9, r9, r9, r9
 170:	00000000 	andeq	r0, r0, r0
 174:	408f4000 	addmi	r4, pc, r0

00000178 <PCA9685Servo::CalcRightCount()>:
 178:	8883      	ldrh	r3, [r0, #4]
 17a:	ed9f 7b0b 	vldr	d7, [pc, #44]	; 1a8 <PCA9685Servo::CalcRightCount()+0x30>
 17e:	ee06 3a10 	vmov	s12, r3
 182:	ed9f 5b0b 	vldr	d5, [pc, #44]	; 1b0 <PCA9685Servo::CalcRightCount()+0x38>
 186:	eeb8 6bc6 	vcvt.f64.s32	d6, s12
 18a:	ee26 6b07 	vmul.f64	d6, d6, d7
 18e:	ee86 7b05 	vdiv.f64	d7, d6, d5
 192:	eeb6 6b00 	vmov.f64	d6, #96	; 0x3f000000  0.5
 196:	ee37 7b06 	vadd.f64	d7, d7, d6
 19a:	eefc 7bc7 	vcvt.u32.f64	s15, d7
 19e:	ee17 3a90 	vmov	r3, s15
 1a2:	8103      	strh	r3, [r0, #8]
 1a4:	4770      	bx	lr
 1a6:	bf00      	nop
 1a8:	9999999a 	ldmibls	r9, {r1, r3, r4, r7, r8, fp, ip, pc}
 1ac:	40699999 	mlsmi	r9, r9, r9, r9
 1b0:	00000000 	andeq	r0, r0, r0
 1b4:	408f4000 	addmi	r4, pc, r0

000001b8 <PCA9685Servo::Set(unsigned char, unsigned short)>:
 1b8:	8903      	ldrh	r3, [r0, #8]
 1ba:	4293      	cmp	r3, r2
 1bc:	d303      	bcc.n	1c6 <PCA9685Servo::Set(unsigned char, unsigned short)+0xe>
 1be:	88c3      	ldrh	r3, [r0, #6]
 1c0:	4293      	cmp	r3, r2
 1c2:	bf38      	it	cc
 1c4:	4613      	movcc	r3, r2
 1c6:	461a      	mov	r2, r3
 1c8:	f7ff bffe 	b.w	0 <PCA9685::Write(unsigned char, unsigned short)>

000001cc <PCA9685Servo::Set(unsigned char, unsigned char)>:
 1cc:	b36a      	cbz	r2, 22a <PCA9685Servo::Set(unsigned char, unsigned char)+0x5e>
 1ce:	2a80      	cmp	r2, #128	; 0x80
 1d0:	d031      	beq.n	236 <PCA9685Servo::Set(unsigned char, unsigned char)+0x6a>
 1d2:	2aff      	cmp	r2, #255	; 0xff
 1d4:	d02c      	beq.n	230 <PCA9685Servo::Set(unsigned char, unsigned char)+0x64>
 1d6:	b410      	push	{r4}
 1d8:	ee07 2a90 	vmov	s15, r2
 1dc:	88c4      	ldrh	r4, [r0, #6]
 1de:	b083      	sub	sp, #12
 1e0:	8903      	ldrh	r3, [r0, #8]
 1e2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 1e6:	ed9f 7a16 	vldr	s14, [pc, #88]	; 240 <PCA9685Servo::Set(unsigned char, unsigned char)+0x74>
 1ea:	1b1b      	subs	r3, r3, r4
 1ec:	ee06 3a90 	vmov	s13, r3
 1f0:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 1f4:	ee86 6a87 	vdiv.f32	s12, s13, s14
 1f8:	ee26 6a27 	vmul.f32	s12, s12, s15
 1fc:	eeb6 7b00 	vmov.f64	d7, #96	; 0x3f000000  0.5
 200:	eeb7 6ac6 	vcvt.f64.f32	d6, s12
 204:	ee36 6b07 	vadd.f64	d6, d6, d7
 208:	ee07 4a90 	vmov	s15, r4
 20c:	eeb8 7be7 	vcvt.f64.s32	d7, s15
 210:	ee36 7b07 	vadd.f64	d7, d6, d7
 214:	eefc 7bc7 	vcvt.u32.f64	s15, d7
 218:	edcd 7a01 	vstr	s15, [sp, #4]
 21c:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 220:	b003      	add	sp, #12
 222:	f85d 4b04 	ldr.w	r4, [sp], #4
 226:	f7ff bffe 	b.w	0 <PCA9685::Write(unsigned char, unsigned short)>
 22a:	88c2      	ldrh	r2, [r0, #6]
 22c:	f7ff bffe 	b.w	0 <PCA9685::Write(unsigned char, unsigned short)>
 230:	8902      	ldrh	r2, [r0, #8]
 232:	f7ff bffe 	b.w	0 <PCA9685::Write(unsigned char, unsigned short)>
 236:	f240 1233 	movw	r2, #307	; 0x133
 23a:	f7ff bffe 	b.w	0 <PCA9685::Write(unsigned char, unsigned short)>
 23e:	bf00      	nop
 240:	437f0000 	cmnmi	pc, #0

00000244 <PCA9685Servo::SetAngle(unsigned char, unsigned char)>:
 244:	2a00      	cmp	r2, #0
 246:	d04b      	beq.n	2e0 <PCA9685Servo::SetAngle(unsigned char, unsigned char)+0x9c>
 248:	2a5a      	cmp	r2, #90	; 0x5a
 24a:	d04f      	beq.n	2ec <PCA9685Servo::SetAngle(unsigned char, unsigned char)+0xa8>
 24c:	2ab3      	cmp	r2, #179	; 0xb3
 24e:	d84a      	bhi.n	2e6 <PCA9685Servo::SetAngle(unsigned char, unsigned char)+0xa2>
 250:	2a59      	cmp	r2, #89	; 0x59
 252:	d922      	bls.n	29a <PCA9685Servo::SetAngle(unsigned char, unsigned char)+0x56>
 254:	8903      	ldrh	r3, [r0, #8]
 256:	ee07 2a90 	vmov	s15, r2
 25a:	f46f 7299 	mvn.w	r2, #306	; 0x132
 25e:	ed9f 6a25 	vldr	s12, [pc, #148]	; 2f4 <PCA9685Servo::SetAngle(unsigned char, unsigned char)+0xb0>
 262:	189a      	adds	r2, r3, r2
 264:	ee06 2a90 	vmov	s13, r2
 268:	f5c3 7219 	rsb	r2, r3, #612	; 0x264
 26c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 270:	3202      	adds	r2, #2
 272:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 276:	ee86 7a86 	vdiv.f32	s14, s13, s12
 27a:	ee27 7a27 	vmul.f32	s14, s14, s15
 27e:	eeb6 6b00 	vmov.f64	d6, #96	; 0x3f000000  0.5
 282:	eeb7 7ac7 	vcvt.f64.f32	d7, s14
 286:	ee37 7b06 	vadd.f64	d7, d7, d6
 28a:	eebc 7bc7 	vcvt.u32.f64	s14, d7
 28e:	ee17 3a10 	vmov	r3, s14
 292:	4413      	add	r3, r2
 294:	b29a      	uxth	r2, r3
 296:	f7ff bffe 	b.w	0 <PCA9685::Write(unsigned char, unsigned short)>
 29a:	b410      	push	{r4}
 29c:	ee07 2a90 	vmov	s15, r2
 2a0:	88c4      	ldrh	r4, [r0, #6]
 2a2:	ed9f 6a14 	vldr	s12, [pc, #80]	; 2f4 <PCA9685Servo::SetAngle(unsigned char, unsigned char)+0xb0>
 2a6:	f5c4 7399 	rsb	r3, r4, #306	; 0x132
 2aa:	3301      	adds	r3, #1
 2ac:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 2b0:	ee07 3a10 	vmov	s14, r3
 2b4:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 2b8:	ee86 7a86 	vdiv.f32	s14, s13, s12
 2bc:	ee27 7a27 	vmul.f32	s14, s14, s15
 2c0:	eeb6 6b00 	vmov.f64	d6, #96	; 0x3f000000  0.5
 2c4:	eeb7 7ac7 	vcvt.f64.f32	d7, s14
 2c8:	ee37 7b06 	vadd.f64	d7, d7, d6
 2cc:	eefc 7bc7 	vcvt.u32.f64	s15, d7
 2d0:	ee17 2a90 	vmov	r2, s15
 2d4:	4422      	add	r2, r4
 2d6:	f85d 4b04 	ldr.w	r4, [sp], #4
 2da:	b292      	uxth	r2, r2
 2dc:	f7ff bffe 	b.w	0 <PCA9685::Write(unsigned char, unsigned short)>
 2e0:	88c2      	ldrh	r2, [r0, #6]
 2e2:	f7ff bffe 	b.w	0 <PCA9685::Write(unsigned char, unsigned short)>
 2e6:	8902      	ldrh	r2, [r0, #8]
 2e8:	f7ff bffe 	b.w	0 <PCA9685::Write(unsigned char, unsigned short)>
 2ec:	f240 1233 	movw	r2, #307	; 0x133
 2f0:	f7ff bffe 	b.w	0 <PCA9685::Write(unsigned char, unsigned short)>
 2f4:	42b40000 	adcsmi	r0, r4, #0

Disassembly of section .ARM.extab:

00000000 <.ARM.extab>:
   0:	00000000 	andeq	r0, r0, r0
   4:	00a8b0b0 	strhteq	fp, [r8], r0
   8:	0d01ffff 	stceq	15, cr15, [r1, #-1020]	; 0xfffffc04
   c:	00000404 	andeq	r0, r0, r4, lsl #8
  10:	007c1418 	rsbseq	r1, ip, r8, lsl r4
  14:	00040182 	andeq	r0, r4, r2, lsl #3
	...

Disassembly of section .ARM.exidx:

00000000 <.ARM.exidx>:
	...
   8:	00000098 	muleq	r0, r8, r0
   c:	00000001 	andeq	r0, r0, r1
  10:	000000a4 	andeq	r0, r0, r4, lsr #1
  14:	00000001 	andeq	r0, r0, r1
  18:	000000e8 	andeq	r0, r0, r8, ror #1
  1c:	00000001 	andeq	r0, r0, r1
  20:	000000ec 	andeq	r0, r0, ip, ror #1
  24:	00000001 	andeq	r0, r0, r1
  28:	00000130 	andeq	r0, r0, r0, lsr r1
  2c:	00000001 	andeq	r0, r0, r1
  30:	00000134 	andeq	r0, r0, r4, lsr r1
  34:	00000001 	andeq	r0, r0, r1
  38:	00000178 	andeq	r0, r0, r8, ror r1
  3c:	00000001 	andeq	r0, r0, r1
  40:	000001b8 			; <UNDEFINED> instruction: 0x000001b8
  44:	00000001 	andeq	r0, r0, r1
  48:	000001cc 	andeq	r0, r0, ip, asr #3
  4c:	00000001 	andeq	r0, r0, r1
  50:	00000244 	andeq	r0, r0, r4, asr #4
  54:	00000001 	andeq	r0, r0, r1

Disassembly of section .comment:

00000000 <.comment>:
   0:	43434700 	movtmi	r4, #14080	; 0x3700
   4:	5528203a 	strpl	r2, [r8, #-58]!	; 0xffffffc6
   8:	746e7562 	strbtvc	r7, [lr], #-1378	; 0xfffffa9e
   c:	694c2f75 	stmdbvs	ip, {r0, r2, r4, r5, r6, r8, r9, sl, fp, sp}^
  10:	6f72616e 	svcvs	0x0072616e
  14:	342e3520 	strtcc	r3, [lr], #-1312	; 0xfffffae0
  18:	362d302e 	strtcc	r3, [sp], -lr, lsr #32
  1c:	6e756275 	mrcvs	2, 3, r6, cr5, cr5, {3}
  20:	7e317574 	mrcvc	5, 1, r7, cr1, cr4, {3}
  24:	302e3631 	eorcc	r3, lr, r1, lsr r6
  28:	31312e34 	teqcc	r1, r4, lsr lr
  2c:	2e352029 	cdpcs	0, 3, cr2, cr5, cr9, {1}
  30:	20302e34 	eorscs	r2, r0, r4, lsr lr
  34:	36313032 			; <UNDEFINED> instruction: 0x36313032
  38:	39303630 	ldmdbcc	r0!, {r4, r5, r9, sl, ip, sp}
	...

Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00003241 	andeq	r3, r0, r1, asr #4
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000028 	andeq	r0, r0, r8, lsr #32
  10:	412d3705 			; <UNDEFINED> instruction: 0x412d3705
  14:	070a0600 	streq	r0, [sl, -r0, lsl #12]
  18:	09010841 	stmdbeq	r1, {r0, r6, fp}
  1c:	12040a02 	andne	r0, r4, #8192	; 0x2000
  20:	15011404 	strne	r1, [r1, #-1028]	; 0xfffffbfc
  24:	18031701 	stmdane	r3, {r0, r8, r9, sl, ip}
  28:	1a011901 	bne	46434 <PCA9685Servo::SetAngle(unsigned char, unsigned char)+0x461f0>
  2c:	1e011c02 	cdpne	12, 0, cr1, cr1, cr2, {0}
  30:	Address 0x00000030 is out of bounds.


pca9685pwmled.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <PCA9685PWMLed::PCA9685PWMLed(unsigned char)>:
   0:	b510      	push	{r4, lr}
   2:	4604      	mov	r4, r0
   4:	f7ff fffe 	bl	0 <PCA9685::PCA9685(unsigned char)>
   8:	4620      	mov	r0, r4
   a:	2178      	movs	r1, #120	; 0x78
   c:	f7ff fffe 	bl	0 <PCA9685::SetFrequency(unsigned short)>
  10:	4620      	mov	r0, r4
  12:	bd10      	pop	{r4, pc}
  14:	4620      	mov	r0, r4
  16:	f7ff fffe 	bl	0 <PCA9685::~PCA9685()>
  1a:	f7ff fffe 	bl	0 <__cxa_end_cleanup>
  1e:	bf00      	nop

00000020 <PCA9685PWMLed::~PCA9685PWMLed()>:
  20:	b510      	push	{r4, lr}
  22:	4604      	mov	r4, r0
  24:	f7ff fffe 	bl	0 <PCA9685::~PCA9685()>
  28:	4620      	mov	r0, r4
  2a:	bd10      	pop	{r4, pc}

0000002c <PCA9685PWMLed::Set(unsigned char, unsigned short)>:
  2c:	b410      	push	{r4}
  2e:	f640 74fe 	movw	r4, #4094	; 0xffe
  32:	42a2      	cmp	r2, r4
  34:	d809      	bhi.n	4a <PCA9685PWMLed::Set(unsigned char, unsigned short)+0x1e>
  36:	b11a      	cbz	r2, 40 <PCA9685PWMLed::Set(unsigned char, unsigned short)+0x14>
  38:	f85d 4b04 	ldr.w	r4, [sp], #4
  3c:	f7ff bffe 	b.w	0 <PCA9685::Write(unsigned char, unsigned short)>
  40:	2201      	movs	r2, #1
  42:	f85d 4b04 	ldr.w	r4, [sp], #4
  46:	f7ff bffe 	b.w	0 <PCA9685::SetFullOff(unsigned char, bool)>
  4a:	2201      	movs	r2, #1
  4c:	f85d 4b04 	ldr.w	r4, [sp], #4
  50:	f7ff bffe 	b.w	0 <PCA9685::SetFullOn(unsigned char, bool)>

00000054 <PCA9685PWMLed::Set(unsigned char, unsigned char)>:
  54:	2aff      	cmp	r2, #255	; 0xff
  56:	d008      	beq.n	6a <PCA9685PWMLed::Set(unsigned char, unsigned char)+0x16>
  58:	b122      	cbz	r2, 64 <PCA9685PWMLed::Set(unsigned char, unsigned char)+0x10>
  5a:	1113      	asrs	r3, r2, #4
  5c:	ea43 1202 	orr.w	r2, r3, r2, lsl #4
  60:	f7ff bffe 	b.w	0 <PCA9685::Write(unsigned char, unsigned short)>
  64:	2201      	movs	r2, #1
  66:	f7ff bffe 	b.w	0 <PCA9685::SetFullOff(unsigned char, bool)>
  6a:	2201      	movs	r2, #1
  6c:	f7ff bffe 	b.w	0 <PCA9685::SetFullOn(unsigned char, bool)>

Disassembly of section .ARM.extab:

00000000 <.ARM.extab>:
   0:	00000000 	andeq	r0, r0, r0
   4:	00a8b0b0 	strhteq	fp, [r8], r0
   8:	0c01ffff 	stceq	15, cr15, [r1], {255}	; 0xff
   c:	00000404 	andeq	r0, r0, r4, lsl #8
  10:	0014040c 	andseq	r0, r4, ip, lsl #8
  14:	0000041a 	andeq	r0, r0, sl, lsl r4

Disassembly of section .ARM.exidx:

00000000 <.ARM.exidx>:
	...
   8:	00000020 	andeq	r0, r0, r0, lsr #32
   c:	00000001 	andeq	r0, r0, r1
  10:	0000002c 	andeq	r0, r0, ip, lsr #32
  14:	00000001 	andeq	r0, r0, r1
  18:	00000054 	andeq	r0, r0, r4, asr r0
  1c:	00000001 	andeq	r0, r0, r1

Disassembly of section .comment:

00000000 <.comment>:
   0:	43434700 	movtmi	r4, #14080	; 0x3700
   4:	5528203a 	strpl	r2, [r8, #-58]!	; 0xffffffc6
   8:	746e7562 	strbtvc	r7, [lr], #-1378	; 0xfffffa9e
   c:	694c2f75 	stmdbvs	ip, {r0, r2, r4, r5, r6, r8, r9, sl, fp, sp}^
  10:	6f72616e 	svcvs	0x0072616e
  14:	342e3520 	strtcc	r3, [lr], #-1312	; 0xfffffae0
  18:	362d302e 	strtcc	r3, [sp], -lr, lsr #32
  1c:	6e756275 	mrcvs	2, 3, r6, cr5, cr5, {3}
  20:	7e317574 	mrcvc	5, 1, r7, cr1, cr4, {3}
  24:	302e3631 	eorcc	r3, lr, r1, lsr r6
  28:	31312e34 	teqcc	r1, r4, lsr lr
  2c:	2e352029 	cdpcs	0, 3, cr2, cr5, cr9, {1}
  30:	20302e34 	eorscs	r2, r0, r4, lsr lr
  34:	36313032 			; <UNDEFINED> instruction: 0x36313032
  38:	39303630 	ldmdbcc	r0!, {r4, r5, r9, sl, ip, sp}
	...

Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00003241 	andeq	r3, r0, r1, asr #4
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000028 	andeq	r0, r0, r8, lsr #32
  10:	412d3705 			; <UNDEFINED> instruction: 0x412d3705
  14:	070a0600 	streq	r0, [sl, -r0, lsl #12]
  18:	09010841 	stmdbeq	r1, {r0, r6, fp}
  1c:	12040a02 	andne	r0, r4, #8192	; 0x2000
  20:	15011404 	strne	r1, [r1, #-1028]	; 0xfffffbfc
  24:	18031701 	stmdane	r3, {r0, r8, r9, sl, ip}
  28:	1a011901 	bne	46434 <PCA9685PWMLed::Set(unsigned char, unsigned char)+0x463e0>
  2c:	1e011c02 	cdpne	12, 0, cr1, cr1, cr2, {0}
  30:	Address 0x00000030 is out of bounds.


pca9685.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <PCA9685::~PCA9685()>:
   0:	4770      	bx	lr
   2:	bf00      	nop

00000004 <PCA9685::CalcPresScale(unsigned short)>:
   4:	2918      	cmp	r1, #24
   6:	f240 53f6 	movw	r3, #1526	; 0x5f6
   a:	eddf 6a0d 	vldr	s13, [pc, #52]	; 40 <PCA9685::CalcPresScale(unsigned short)+0x3c>
   e:	bf38      	it	cc
  10:	2118      	movcc	r1, #24
  12:	428b      	cmp	r3, r1
  14:	bf28      	it	cs
  16:	460b      	movcs	r3, r1
  18:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
  1c:	ee07 3a90 	vmov	s15, r3
  20:	eef8 7ae7 	vcvt.f32.s32	s15, s15
  24:	ee77 6aa6 	vadd.f32	s13, s15, s13
  28:	ee76 6ac7 	vsub.f32	s13, s13, s14
  2c:	ee86 7aa7 	vdiv.f32	s14, s13, s15
  30:	eefc 7ac7 	vcvt.u32.f32	s15, s14
  34:	ee17 0a90 	vmov	r0, s15
  38:	3801      	subs	r0, #1
  3a:	b2c0      	uxtb	r0, r0
  3c:	4770      	bx	lr
  3e:	bf00      	nop
  40:	45bebc20 	ldrmi	fp, [lr, #3104]!	; 0xc20

00000044 <PCA9685::CalcFrequency(unsigned char)>:
  44:	1c4b      	adds	r3, r1, #1
  46:	eddf 5a4c 	vldr	s11, [pc, #304]	; 178 <PCA9685::CalcFrequency(unsigned char)+0x134>
  4a:	b410      	push	{r4}
  4c:	b083      	sub	sp, #12
  4e:	ee07 3a90 	vmov	s15, r3
  52:	eeb7 6a00 	vmov.f32	s12, #112	; 0x3f800000  1.0
  56:	eef8 7ae7 	vcvt.f32.s32	s15, s15
  5a:	ee37 7aa5 	vadd.f32	s14, s15, s11
  5e:	ee37 7a46 	vsub.f32	s14, s14, s12
  62:	eec7 6a27 	vdiv.f32	s13, s14, s15
  66:	eefc 7ae6 	vcvt.u32.f32	s15, s13
  6a:	edcd 7a01 	vstr	s15, [sp, #4]
  6e:	f8bd 2004 	ldrh.w	r2, [sp, #4]
  72:	2a18      	cmp	r2, #24
  74:	d97d      	bls.n	172 <PCA9685::CalcFrequency(unsigned char)+0x12e>
  76:	2a18      	cmp	r2, #24
  78:	4613      	mov	r3, r2
  7a:	f240 50f6 	movw	r0, #1526	; 0x5f6
  7e:	4614      	mov	r4, r2
  80:	bf38      	it	cc
  82:	2318      	movcc	r3, #24
  84:	4283      	cmp	r3, r0
  86:	bf28      	it	cs
  88:	4603      	movcs	r3, r0
  8a:	ee07 3a90 	vmov	s15, r3
  8e:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
  92:	ee77 6a25 	vadd.f32	s13, s14, s11
  96:	ee76 6ac6 	vsub.f32	s13, s13, s12
  9a:	eec6 7a87 	vdiv.f32	s15, s13, s14
  9e:	eefc 7ae7 	vcvt.u32.f32	s15, s15
  a2:	ee17 3a90 	vmov	r3, s15
  a6:	3b01      	subs	r3, #1
  a8:	b2db      	uxtb	r3, r3
  aa:	4299      	cmp	r1, r3
  ac:	d01a      	beq.n	e4 <PCA9685::CalcFrequency(unsigned char)+0xa0>
  ae:	e01d      	b.n	ec <PCA9685::CalcFrequency(unsigned char)+0xa8>
  b0:	2c18      	cmp	r4, #24
  b2:	4623      	mov	r3, r4
  b4:	bf38      	it	cc
  b6:	2318      	movcc	r3, #24
  b8:	b29b      	uxth	r3, r3
  ba:	4283      	cmp	r3, r0
  bc:	bf28      	it	cs
  be:	4603      	movcs	r3, r0
  c0:	ee07 3a90 	vmov	s15, r3
  c4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
  c8:	ee77 6aa5 	vadd.f32	s13, s15, s11
  cc:	ee76 6ac6 	vsub.f32	s13, s13, s12
  d0:	ee86 7aa7 	vdiv.f32	s14, s13, s15
  d4:	eefc 7ac7 	vcvt.u32.f32	s15, s14
  d8:	ee17 3a90 	vmov	r3, s15
  dc:	3b01      	subs	r3, #1
  de:	b2db      	uxtb	r3, r3
  e0:	4299      	cmp	r1, r3
  e2:	d103      	bne.n	ec <PCA9685::CalcFrequency(unsigned char)+0xa8>
  e4:	3c01      	subs	r4, #1
  e6:	b2a4      	uxth	r4, r4
  e8:	2c18      	cmp	r4, #24
  ea:	d1e1      	bne.n	b0 <PCA9685::CalcFrequency(unsigned char)+0x6c>
  ec:	f240 53f5 	movw	r3, #1525	; 0x5f5
  f0:	429a      	cmp	r2, r3
  f2:	d837      	bhi.n	164 <PCA9685::CalcFrequency(unsigned char)+0x120>
  f4:	2a18      	cmp	r2, #24
  f6:	4613      	mov	r3, r2
  f8:	eddf 5a1f 	vldr	s11, [pc, #124]	; 178 <PCA9685::CalcFrequency(unsigned char)+0x134>
  fc:	bf38      	it	cc
  fe:	2318      	movcc	r3, #24
 100:	ee07 3a10 	vmov	s14, r3
 104:	eeb7 6a00 	vmov.f32	s12, #112	; 0x3f800000  1.0
 108:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 10c:	ee77 6a25 	vadd.f32	s13, s14, s11
 110:	ee76 6ac6 	vsub.f32	s13, s13, s12
 114:	eec6 7a87 	vdiv.f32	s15, s13, s14
 118:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 11c:	ee17 3a90 	vmov	r3, s15
 120:	3b01      	subs	r3, #1
 122:	b2db      	uxtb	r3, r3
 124:	4299      	cmp	r1, r3
 126:	bf08      	it	eq
 128:	f240 50f6 	movweq	r0, #1526	; 0x5f6
 12c:	d016      	beq.n	15c <PCA9685::CalcFrequency(unsigned char)+0x118>
 12e:	e019      	b.n	164 <PCA9685::CalcFrequency(unsigned char)+0x120>
 130:	2a18      	cmp	r2, #24
 132:	4613      	mov	r3, r2
 134:	bf38      	it	cc
 136:	2318      	movcc	r3, #24
 138:	ee07 3a10 	vmov	s14, r3
 13c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 140:	ee77 6a25 	vadd.f32	s13, s14, s11
 144:	ee76 6ac6 	vsub.f32	s13, s13, s12
 148:	eec6 7a87 	vdiv.f32	s15, s13, s14
 14c:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 150:	ee17 3a90 	vmov	r3, s15
 154:	3b01      	subs	r3, #1
 156:	b2db      	uxtb	r3, r3
 158:	4299      	cmp	r1, r3
 15a:	d103      	bne.n	164 <PCA9685::CalcFrequency(unsigned char)+0x120>
 15c:	3201      	adds	r2, #1
 15e:	b292      	uxth	r2, r2
 160:	4282      	cmp	r2, r0
 162:	d1e5      	bne.n	130 <PCA9685::CalcFrequency(unsigned char)+0xec>
 164:	1910      	adds	r0, r2, r4
 166:	f3c0 004f 	ubfx	r0, r0, #1, #16
 16a:	b003      	add	sp, #12
 16c:	f85d 4b04 	ldr.w	r4, [sp], #4
 170:	4770      	bx	lr
 172:	4614      	mov	r4, r2
 174:	e7be      	b.n	f4 <PCA9685::CalcFrequency(unsigned char)+0xb0>
 176:	bf00      	nop
 178:	45bebc20 	ldrmi	fp, [lr, #3104]!	; 0xc20

0000017c <PCA9685::Dump()>:
 17c:	4770      	bx	lr
 17e:	bf00      	nop

00000180 <PCA9685::I2cSetup()>:
 180:	b508      	push	{r3, lr}
 182:	7800      	ldrb	r0, [r0, #0]
 184:	f7ff fffe 	bl	0 <bcm2835_i2c_setSlaveAddress>
 188:	f44f 50d4 	mov.w	r0, #6784	; 0x1a80
 18c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 190:	f2c0 0006 	movt	r0, #6
 194:	f7ff bffe 	b.w	0 <bcm2835_i2c_set_baudrate>

00000198 <PCA9685::I2cWriteReg(unsigned char, unsigned char)>:
 198:	b510      	push	{r4, lr}
 19a:	f240 0400 	movw	r4, #0
 19e:	f2c0 0400 	movt	r4, #0
 1a2:	b082      	sub	sp, #8
 1a4:	7800      	ldrb	r0, [r0, #0]
 1a6:	6823      	ldr	r3, [r4, #0]
 1a8:	f88d 2001 	strb.w	r2, [sp, #1]
 1ac:	f88d 1000 	strb.w	r1, [sp]
 1b0:	9301      	str	r3, [sp, #4]
 1b2:	f7ff fffe 	bl	0 <bcm2835_i2c_setSlaveAddress>
 1b6:	f44f 50d4 	mov.w	r0, #6784	; 0x1a80
 1ba:	f2c0 0006 	movt	r0, #6
 1be:	f7ff fffe 	bl	0 <bcm2835_i2c_set_baudrate>
 1c2:	2102      	movs	r1, #2
 1c4:	4668      	mov	r0, sp
 1c6:	f7ff fffe 	bl	0 <bcm2835_i2c_write>
 1ca:	9a01      	ldr	r2, [sp, #4]
 1cc:	6823      	ldr	r3, [r4, #0]
 1ce:	429a      	cmp	r2, r3
 1d0:	d101      	bne.n	1d6 <PCA9685::I2cWriteReg(unsigned char, unsigned char)+0x3e>
 1d2:	b002      	add	sp, #8
 1d4:	bd10      	pop	{r4, pc}
 1d6:	f7ff fffe 	bl	0 <__stack_chk_fail>
 1da:	bf00      	nop

000001dc <PCA9685::I2cReadReg(unsigned char)>:
 1dc:	b530      	push	{r4, r5, lr}
 1de:	f240 0400 	movw	r4, #0
 1e2:	f2c0 0400 	movt	r4, #0
 1e6:	b083      	sub	sp, #12
 1e8:	ad02      	add	r5, sp, #8
 1ea:	7800      	ldrb	r0, [r0, #0]
 1ec:	6823      	ldr	r3, [r4, #0]
 1ee:	f805 1d05 	strb.w	r1, [r5, #-5]!
 1f2:	9301      	str	r3, [sp, #4]
 1f4:	f7ff fffe 	bl	0 <bcm2835_i2c_setSlaveAddress>
 1f8:	f44f 50d4 	mov.w	r0, #6784	; 0x1a80
 1fc:	f2c0 0006 	movt	r0, #6
 200:	f7ff fffe 	bl	0 <bcm2835_i2c_set_baudrate>
 204:	2101      	movs	r1, #1
 206:	4628      	mov	r0, r5
 208:	f7ff fffe 	bl	0 <bcm2835_i2c_write>
 20c:	4628      	mov	r0, r5
 20e:	2101      	movs	r1, #1
 210:	f7ff fffe 	bl	0 <bcm2835_i2c_read>
 214:	9a01      	ldr	r2, [sp, #4]
 216:	6823      	ldr	r3, [r4, #0]
 218:	f89d 0003 	ldrb.w	r0, [sp, #3]
 21c:	429a      	cmp	r2, r3
 21e:	d101      	bne.n	224 <PCA9685::I2cReadReg(unsigned char)+0x48>
 220:	b003      	add	sp, #12
 222:	bd30      	pop	{r4, r5, pc}
 224:	f7ff fffe 	bl	0 <__stack_chk_fail>

00000228 <PCA9685::Sleep(bool)>:
 228:	b570      	push	{r4, r5, r6, lr}
 22a:	460e      	mov	r6, r1
 22c:	2100      	movs	r1, #0
 22e:	4605      	mov	r5, r0
 230:	f7ff fffe 	bl	1dc <PCA9685::I2cReadReg(unsigned char)>
 234:	f000 04ef 	and.w	r4, r0, #239	; 0xef
 238:	b10e      	cbz	r6, 23e <PCA9685::Sleep(bool)+0x16>
 23a:	f044 0410 	orr.w	r4, r4, #16
 23e:	4628      	mov	r0, r5
 240:	4622      	mov	r2, r4
 242:	2100      	movs	r1, #0
 244:	f7ff fffe 	bl	198 <PCA9685::I2cWriteReg(unsigned char, unsigned char)>
 248:	0663      	lsls	r3, r4, #25
 24a:	d100      	bne.n	24e <PCA9685::Sleep(bool)+0x26>
 24c:	bd70      	pop	{r4, r5, r6, pc}
 24e:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 252:	2100      	movs	r1, #0
 254:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 258:	f7ff bffe 	b.w	0 <bcm2835_delayMicroseconds>

0000025c <PCA9685::SetPreScaller(unsigned char)>:
 25c:	b538      	push	{r3, r4, r5, lr}
 25e:	460d      	mov	r5, r1
 260:	2101      	movs	r1, #1
 262:	4604      	mov	r4, r0
 264:	f7ff fffe 	bl	228 <PCA9685::Sleep(bool)>
 268:	2d03      	cmp	r5, #3
 26a:	462a      	mov	r2, r5
 26c:	4620      	mov	r0, r4
 26e:	f04f 01fe 	mov.w	r1, #254	; 0xfe
 272:	bf38      	it	cc
 274:	2203      	movcc	r2, #3
 276:	f7ff fffe 	bl	198 <PCA9685::I2cWriteReg(unsigned char, unsigned char)>
 27a:	4620      	mov	r0, r4
 27c:	2100      	movs	r1, #0
 27e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 282:	f7ff bffe 	b.w	228 <PCA9685::Sleep(bool)>
 286:	bf00      	nop

00000288 <PCA9685::SetFrequency(unsigned short)>:
 288:	2918      	cmp	r1, #24
 28a:	f240 53f6 	movw	r3, #1526	; 0x5f6
 28e:	eddf 6a0d 	vldr	s13, [pc, #52]	; 2c4 <PCA9685::SetFrequency(unsigned short)+0x3c>
 292:	bf38      	it	cc
 294:	2118      	movcc	r1, #24
 296:	428b      	cmp	r3, r1
 298:	bf28      	it	cs
 29a:	460b      	movcs	r3, r1
 29c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 2a0:	ee07 3a90 	vmov	s15, r3
 2a4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 2a8:	ee77 6aa6 	vadd.f32	s13, s15, s13
 2ac:	ee76 6ac7 	vsub.f32	s13, s13, s14
 2b0:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 2b4:	eefc 7ac7 	vcvt.u32.f32	s15, s14
 2b8:	ee17 1a90 	vmov	r1, s15
 2bc:	3901      	subs	r1, #1
 2be:	b2c9      	uxtb	r1, r1
 2c0:	f7ff bffe 	b.w	25c <PCA9685::SetPreScaller(unsigned char)>
 2c4:	45bebc20 	ldrmi	fp, [lr, #3104]!	; 0xc20

000002c8 <PCA9685::GetPreScaller()>:
 2c8:	21fe      	movs	r1, #254	; 0xfe
 2ca:	f7ff bffe 	b.w	1dc <PCA9685::I2cReadReg(unsigned char)>
 2ce:	bf00      	nop

000002d0 <PCA9685::GetFrequency()>:
 2d0:	b510      	push	{r4, lr}
 2d2:	21fe      	movs	r1, #254	; 0xfe
 2d4:	4604      	mov	r4, r0
 2d6:	f7ff fffe 	bl	1dc <PCA9685::I2cReadReg(unsigned char)>
 2da:	4601      	mov	r1, r0
 2dc:	4620      	mov	r0, r4
 2de:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 2e2:	f7ff bffe 	b.w	44 <PCA9685::CalcFrequency(unsigned char)>
 2e6:	bf00      	nop

000002e8 <PCA9685::SetOCH(TPCA9685Och)>:
 2e8:	b538      	push	{r3, r4, r5, lr}
 2ea:	460d      	mov	r5, r1
 2ec:	2101      	movs	r1, #1
 2ee:	4604      	mov	r4, r0
 2f0:	f7ff fffe 	bl	1dc <PCA9685::I2cReadReg(unsigned char)>
 2f4:	2d08      	cmp	r5, #8
 2f6:	f04f 0101 	mov.w	r1, #1
 2fa:	f000 02f7 	and.w	r2, r0, #247	; 0xf7
 2fe:	4620      	mov	r0, r4
 300:	bf08      	it	eq
 302:	f042 0208 	orreq.w	r2, r2, #8
 306:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 30a:	f7ff bffe 	b.w	198 <PCA9685::I2cWriteReg(unsigned char, unsigned char)>
 30e:	bf00      	nop

00000310 <PCA9685::GetOCH()>:
 310:	b508      	push	{r3, lr}
 312:	2101      	movs	r1, #1
 314:	f7ff fffe 	bl	1dc <PCA9685::I2cReadReg(unsigned char)>
 318:	f000 0008 	and.w	r0, r0, #8
 31c:	bd08      	pop	{r3, pc}
 31e:	bf00      	nop

00000320 <PCA9685::SetInvert(bool)>:
 320:	b538      	push	{r3, r4, r5, lr}
 322:	460d      	mov	r5, r1
 324:	2101      	movs	r1, #1
 326:	4604      	mov	r4, r0
 328:	f7ff fffe 	bl	1dc <PCA9685::I2cReadReg(unsigned char)>
 32c:	f000 02ef 	and.w	r2, r0, #239	; 0xef
 330:	b10d      	cbz	r5, 336 <PCA9685::SetInvert(bool)+0x16>
 332:	f042 0210 	orr.w	r2, r2, #16
 336:	4620      	mov	r0, r4
 338:	2101      	movs	r1, #1
 33a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 33e:	f7ff bffe 	b.w	198 <PCA9685::I2cWriteReg(unsigned char, unsigned char)>
 342:	bf00      	nop

00000344 <PCA9685::GetInvert()>:
 344:	b508      	push	{r3, lr}
 346:	2101      	movs	r1, #1
 348:	f7ff fffe 	bl	1dc <PCA9685::I2cReadReg(unsigned char)>
 34c:	f3c0 1000 	ubfx	r0, r0, #4, #1
 350:	bd08      	pop	{r3, pc}
 352:	bf00      	nop

00000354 <PCA9685::SetOutDriver(bool)>:
 354:	b538      	push	{r3, r4, r5, lr}
 356:	460d      	mov	r5, r1
 358:	2101      	movs	r1, #1
 35a:	4604      	mov	r4, r0
 35c:	f7ff fffe 	bl	1dc <PCA9685::I2cReadReg(unsigned char)>
 360:	f000 02fb 	and.w	r2, r0, #251	; 0xfb
 364:	b10d      	cbz	r5, 36a <PCA9685::SetOutDriver(bool)+0x16>
 366:	f042 0204 	orr.w	r2, r2, #4
 36a:	4620      	mov	r0, r4
 36c:	2101      	movs	r1, #1
 36e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 372:	f7ff bffe 	b.w	198 <PCA9685::I2cWriteReg(unsigned char, unsigned char)>
 376:	bf00      	nop

00000378 <PCA9685::GetOutDriver()>:
 378:	b508      	push	{r3, lr}
 37a:	2101      	movs	r1, #1
 37c:	f7ff fffe 	bl	1dc <PCA9685::I2cReadReg(unsigned char)>
 380:	f3c0 0080 	ubfx	r0, r0, #2, #1
 384:	bd08      	pop	{r3, pc}
 386:	bf00      	nop

00000388 <PCA9685::SetFullOff(unsigned char, bool)>:
 388:	290f      	cmp	r1, #15
 38a:	b570      	push	{r4, r5, r6, lr}
 38c:	bf9a      	itte	ls
 38e:	008c      	lslls	r4, r1, #2
 390:	3409      	addls	r4, #9
 392:	24fd      	movhi	r4, #253	; 0xfd
 394:	4616      	mov	r6, r2
 396:	4605      	mov	r5, r0
 398:	bf98      	it	ls
 39a:	b2e4      	uxtbls	r4, r4
 39c:	4621      	mov	r1, r4
 39e:	f7ff fffe 	bl	1dc <PCA9685::I2cReadReg(unsigned char)>
 3a2:	f040 0210 	orr.w	r2, r0, #16
 3a6:	b2d2      	uxtb	r2, r2
 3a8:	b90e      	cbnz	r6, 3ae <PCA9685::SetFullOff(unsigned char, bool)+0x26>
 3aa:	f000 02ef 	and.w	r2, r0, #239	; 0xef
 3ae:	4621      	mov	r1, r4
 3b0:	4628      	mov	r0, r5
 3b2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 3b6:	f7ff bffe 	b.w	198 <PCA9685::I2cWriteReg(unsigned char, unsigned char)>
 3ba:	bf00      	nop

000003bc <PCA9685::SetFullOn(unsigned char, bool)>:
 3bc:	290f      	cmp	r1, #15
 3be:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 3c0:	bf9a      	itte	ls
 3c2:	008c      	lslls	r4, r1, #2
 3c4:	3407      	addls	r4, #7
 3c6:	24fb      	movhi	r4, #251	; 0xfb
 3c8:	460e      	mov	r6, r1
 3ca:	4617      	mov	r7, r2
 3cc:	bf98      	it	ls
 3ce:	b2e4      	uxtbls	r4, r4
 3d0:	4605      	mov	r5, r0
 3d2:	4621      	mov	r1, r4
 3d4:	f7ff fffe 	bl	1dc <PCA9685::I2cReadReg(unsigned char)>
 3d8:	b16f      	cbz	r7, 3f6 <PCA9685::SetFullOn(unsigned char, bool)+0x3a>
 3da:	f040 0210 	orr.w	r2, r0, #16
 3de:	4621      	mov	r1, r4
 3e0:	4628      	mov	r0, r5
 3e2:	b2d2      	uxtb	r2, r2
 3e4:	f7ff fffe 	bl	198 <PCA9685::I2cWriteReg(unsigned char, unsigned char)>
 3e8:	4631      	mov	r1, r6
 3ea:	4628      	mov	r0, r5
 3ec:	2200      	movs	r2, #0
 3ee:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 3f2:	f7ff bffe 	b.w	388 <PCA9685::SetFullOff(unsigned char, bool)>
 3f6:	f000 02ef 	and.w	r2, r0, #239	; 0xef
 3fa:	4621      	mov	r1, r4
 3fc:	4628      	mov	r0, r5
 3fe:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 402:	f7ff bffe 	b.w	198 <PCA9685::I2cWriteReg(unsigned char, unsigned char)>
 406:	bf00      	nop

00000408 <PCA9685::AutoIncrement(bool)>:
 408:	b538      	push	{r3, r4, r5, lr}
 40a:	460d      	mov	r5, r1
 40c:	2100      	movs	r1, #0
 40e:	4604      	mov	r4, r0
 410:	f7ff fffe 	bl	1dc <PCA9685::I2cReadReg(unsigned char)>
 414:	f000 02df 	and.w	r2, r0, #223	; 0xdf
 418:	b10d      	cbz	r5, 41e <PCA9685::AutoIncrement(bool)+0x16>
 41a:	f042 0220 	orr.w	r2, r2, #32
 41e:	4620      	mov	r0, r4
 420:	2100      	movs	r1, #0
 422:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 426:	f7ff bffe 	b.w	198 <PCA9685::I2cWriteReg(unsigned char, unsigned char)>
 42a:	bf00      	nop

0000042c <PCA9685::I2cWriteReg(unsigned char, unsigned short)>:
 42c:	b530      	push	{r4, r5, lr}
 42e:	f240 0400 	movw	r4, #0
 432:	f2c0 0400 	movt	r4, #0
 436:	b083      	sub	sp, #12
 438:	7800      	ldrb	r0, [r0, #0]
 43a:	1215      	asrs	r5, r2, #8
 43c:	6823      	ldr	r3, [r4, #0]
 43e:	f88d 2001 	strb.w	r2, [sp, #1]
 442:	f88d 1000 	strb.w	r1, [sp]
 446:	9301      	str	r3, [sp, #4]
 448:	f88d 5002 	strb.w	r5, [sp, #2]
 44c:	f7ff fffe 	bl	0 <bcm2835_i2c_setSlaveAddress>
 450:	f44f 50d4 	mov.w	r0, #6784	; 0x1a80
 454:	f2c0 0006 	movt	r0, #6
 458:	f7ff fffe 	bl	0 <bcm2835_i2c_set_baudrate>
 45c:	2103      	movs	r1, #3
 45e:	4668      	mov	r0, sp
 460:	f7ff fffe 	bl	0 <bcm2835_i2c_write>
 464:	9a01      	ldr	r2, [sp, #4]
 466:	6823      	ldr	r3, [r4, #0]
 468:	429a      	cmp	r2, r3
 46a:	d101      	bne.n	470 <PCA9685::I2cWriteReg(unsigned char, unsigned short)+0x44>
 46c:	b003      	add	sp, #12
 46e:	bd30      	pop	{r4, r5, pc}
 470:	f7ff fffe 	bl	0 <__stack_chk_fail>

00000474 <PCA9685::I2cReadReg16(unsigned char)>:
 474:	b510      	push	{r4, lr}
 476:	f240 0400 	movw	r4, #0
 47a:	f2c0 0400 	movt	r4, #0
 47e:	b084      	sub	sp, #16
 480:	7800      	ldrb	r0, [r0, #0]
 482:	2300      	movs	r3, #0
 484:	6822      	ldr	r2, [r4, #0]
 486:	f88d 3008 	strb.w	r3, [sp, #8]
 48a:	f88d 3009 	strb.w	r3, [sp, #9]
 48e:	9203      	str	r2, [sp, #12]
 490:	f88d 1007 	strb.w	r1, [sp, #7]
 494:	f7ff fffe 	bl	0 <bcm2835_i2c_setSlaveAddress>
 498:	f44f 50d4 	mov.w	r0, #6784	; 0x1a80
 49c:	f2c0 0006 	movt	r0, #6
 4a0:	f7ff fffe 	bl	0 <bcm2835_i2c_set_baudrate>
 4a4:	2101      	movs	r1, #1
 4a6:	f10d 0007 	add.w	r0, sp, #7
 4aa:	f7ff fffe 	bl	0 <bcm2835_i2c_write>
 4ae:	2102      	movs	r1, #2
 4b0:	a802      	add	r0, sp, #8
 4b2:	f7ff fffe 	bl	0 <bcm2835_i2c_read>
 4b6:	9a03      	ldr	r2, [sp, #12]
 4b8:	6823      	ldr	r3, [r4, #0]
 4ba:	f89d 0009 	ldrb.w	r0, [sp, #9]
 4be:	f89d 1008 	ldrb.w	r1, [sp, #8]
 4c2:	429a      	cmp	r2, r3
 4c4:	ea41 2000 	orr.w	r0, r1, r0, lsl #8
 4c8:	d101      	bne.n	4ce <PCA9685::I2cReadReg16(unsigned char)+0x5a>
 4ca:	b004      	add	sp, #16
 4cc:	bd10      	pop	{r4, pc}
 4ce:	f7ff fffe 	bl	0 <__stack_chk_fail>
 4d2:	bf00      	nop

000004d4 <PCA9685::Read(unsigned char, unsigned short*, unsigned short*)>:
 4d4:	290f      	cmp	r1, #15
 4d6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 4d8:	bf9c      	itt	ls
 4da:	008c      	lslls	r4, r1, #2
 4dc:	3406      	addls	r4, #6
 4de:	4607      	mov	r7, r0
 4e0:	4616      	mov	r6, r2
 4e2:	461d      	mov	r5, r3
 4e4:	bf94      	ite	ls
 4e6:	b2e4      	uxtbls	r4, r4
 4e8:	24fa      	movhi	r4, #250	; 0xfa
 4ea:	b11a      	cbz	r2, 4f4 <PCA9685::Read(unsigned char, unsigned short*, unsigned short*)+0x20>
 4ec:	4621      	mov	r1, r4
 4ee:	f7ff fffe 	bl	474 <PCA9685::I2cReadReg16(unsigned char)>
 4f2:	8030      	strh	r0, [r6, #0]
 4f4:	b135      	cbz	r5, 504 <PCA9685::Read(unsigned char, unsigned short*, unsigned short*)+0x30>
 4f6:	1ca1      	adds	r1, r4, #2
 4f8:	4638      	mov	r0, r7
 4fa:	f001 01fe 	and.w	r1, r1, #254	; 0xfe
 4fe:	f7ff fffe 	bl	474 <PCA9685::I2cReadReg16(unsigned char)>
 502:	8028      	strh	r0, [r5, #0]
 504:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 506:	bf00      	nop

00000508 <PCA9685::Read(unsigned short*, unsigned short*)>:
 508:	4613      	mov	r3, r2
 50a:	460a      	mov	r2, r1
 50c:	2110      	movs	r1, #16
 50e:	f7ff bffe 	b.w	4d4 <PCA9685::Read(unsigned char, unsigned short*, unsigned short*)>
 512:	bf00      	nop

00000514 <PCA9685::I2cWriteReg(unsigned char, unsigned short, unsigned short)>:
 514:	b5f0      	push	{r4, r5, r6, r7, lr}
 516:	f240 0400 	movw	r4, #0
 51a:	f2c0 0400 	movt	r4, #0
 51e:	b085      	sub	sp, #20
 520:	7800      	ldrb	r0, [r0, #0]
 522:	1217      	asrs	r7, r2, #8
 524:	6825      	ldr	r5, [r4, #0]
 526:	121e      	asrs	r6, r3, #8
 528:	f88d 2005 	strb.w	r2, [sp, #5]
 52c:	f88d 3007 	strb.w	r3, [sp, #7]
 530:	f88d 1004 	strb.w	r1, [sp, #4]
 534:	f88d 7006 	strb.w	r7, [sp, #6]
 538:	f88d 6008 	strb.w	r6, [sp, #8]
 53c:	9503      	str	r5, [sp, #12]
 53e:	f7ff fffe 	bl	0 <bcm2835_i2c_setSlaveAddress>
 542:	f44f 50d4 	mov.w	r0, #6784	; 0x1a80
 546:	f2c0 0006 	movt	r0, #6
 54a:	f7ff fffe 	bl	0 <bcm2835_i2c_set_baudrate>
 54e:	2105      	movs	r1, #5
 550:	a801      	add	r0, sp, #4
 552:	f7ff fffe 	bl	0 <bcm2835_i2c_write>
 556:	9a03      	ldr	r2, [sp, #12]
 558:	6823      	ldr	r3, [r4, #0]
 55a:	429a      	cmp	r2, r3
 55c:	d101      	bne.n	562 <PCA9685::I2cWriteReg(unsigned char, unsigned short, unsigned short)+0x4e>
 55e:	b005      	add	sp, #20
 560:	bdf0      	pop	{r4, r5, r6, r7, pc}
 562:	f7ff fffe 	bl	0 <__stack_chk_fail>
 566:	bf00      	nop

00000568 <PCA9685::Write(unsigned char, unsigned short, unsigned short)>:
 568:	290f      	cmp	r1, #15
 56a:	bf9b      	ittet	ls
 56c:	0089      	lslls	r1, r1, #2
 56e:	3106      	addls	r1, #6
 570:	21fa      	movhi	r1, #250	; 0xfa
 572:	b2c9      	uxtbls	r1, r1
 574:	f7ff bffe 	b.w	514 <PCA9685::I2cWriteReg(unsigned char, unsigned short, unsigned short)>

00000578 <PCA9685::PCA9685(unsigned char)>:
 578:	b538      	push	{r3, r4, r5, lr}
 57a:	4605      	mov	r5, r0
 57c:	7001      	strb	r1, [r0, #0]
 57e:	2400      	movs	r4, #0
 580:	f7ff fffe 	bl	0 <bcm2835_i2c_begin>
 584:	4628      	mov	r0, r5
 586:	2101      	movs	r1, #1
 588:	f7ff fffe 	bl	408 <PCA9685::AutoIncrement(bool)>
 58c:	00a1      	lsls	r1, r4, #2
 58e:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 592:	3106      	adds	r1, #6
 594:	3401      	adds	r4, #1
 596:	f001 01fe 	and.w	r1, r1, #254	; 0xfe
 59a:	2200      	movs	r2, #0
 59c:	4628      	mov	r0, r5
 59e:	f7ff fffe 	bl	514 <PCA9685::I2cWriteReg(unsigned char, unsigned short, unsigned short)>
 5a2:	2c10      	cmp	r4, #16
 5a4:	d1f2      	bne.n	58c <PCA9685::PCA9685(unsigned char)+0x14>
 5a6:	4628      	mov	r0, r5
 5a8:	2100      	movs	r1, #0
 5aa:	f7ff fffe 	bl	228 <PCA9685::Sleep(bool)>
 5ae:	4628      	mov	r0, r5
 5b0:	bd38      	pop	{r3, r4, r5, pc}
 5b2:	bf00      	nop

000005b4 <PCA9685::Write(unsigned char, unsigned short)>:
 5b4:	290f      	cmp	r1, #15
 5b6:	4613      	mov	r3, r2
 5b8:	bf98      	it	ls
 5ba:	0089      	lslls	r1, r1, #2
 5bc:	f04f 0200 	mov.w	r2, #0
 5c0:	bf96      	itet	ls
 5c2:	3106      	addls	r1, #6
 5c4:	21fa      	movhi	r1, #250	; 0xfa
 5c6:	b2c9      	uxtbls	r1, r1
 5c8:	f7ff bffe 	b.w	514 <PCA9685::I2cWriteReg(unsigned char, unsigned short, unsigned short)>

000005cc <PCA9685::Write(unsigned short)>:
 5cc:	460b      	mov	r3, r1
 5ce:	2200      	movs	r2, #0
 5d0:	21fa      	movs	r1, #250	; 0xfa
 5d2:	f7ff bffe 	b.w	514 <PCA9685::I2cWriteReg(unsigned char, unsigned short, unsigned short)>
 5d6:	bf00      	nop

000005d8 <PCA9685::Write(unsigned short, unsigned short)>:
 5d8:	4613      	mov	r3, r2
 5da:	460a      	mov	r2, r1
 5dc:	21fa      	movs	r1, #250	; 0xfa
 5de:	f7ff bffe 	b.w	514 <PCA9685::I2cWriteReg(unsigned char, unsigned short, unsigned short)>
 5e2:	bf00      	nop

Disassembly of section .ARM.extab:

00000000 <.ARM.extab>:
   0:	8101b108 	tsthi	r1, r8, lsl #2
   4:	8400b0b0 	strhi	fp, [r0], #-176	; 0xffffff50
   8:	00000000 	andeq	r0, r0, r0
   c:	8101b108 	tsthi	r1, r8, lsl #2
  10:	8400b0b0 	strhi	fp, [r0], #-176	; 0xffffff50
  14:	00000000 	andeq	r0, r0, r0
  18:	8101b108 	tsthi	r1, r8, lsl #2
  1c:	8400b0b0 	strhi	fp, [r0], #-176	; 0xffffff50
  20:	00000000 	andeq	r0, r0, r0
  24:	8101b108 	tsthi	r1, r8, lsl #2
  28:	8400b0b0 	strhi	fp, [r0], #-176	; 0xffffff50
  2c:	00000000 	andeq	r0, r0, r0

Disassembly of section .ARM.exidx:

00000000 <.ARM.exidx>:
   0:	00000000 	andeq	r0, r0, r0
   4:	00000001 	andeq	r0, r0, r1
   8:	00000004 	andeq	r0, r0, r4
   c:	00000001 	andeq	r0, r0, r1
  10:	00000044 	andeq	r0, r0, r4, asr #32
  14:	00000001 	andeq	r0, r0, r1
  18:	0000017c 	andeq	r0, r0, ip, ror r1
  1c:	00000001 	andeq	r0, r0, r1
  20:	00000180 	andeq	r0, r0, r0, lsl #3
  24:	00000000 	andeq	r0, r0, r0
  28:	00000198 	muleq	r0, r8, r1
  2c:	8001a8b0 			; <UNDEFINED> instruction: 0x8001a8b0
  30:	000001dc 	ldrdeq	r0, [r0], -ip
  34:	8002a9b0 			; <UNDEFINED> instruction: 0x8002a9b0
  38:	00000228 	andeq	r0, r0, r8, lsr #4
  3c:	80aab0b0 	strhthi	fp, [sl], r0
  40:	0000025c 	andeq	r0, r0, ip, asr r2
  44:	80b108a9 	adcshi	r0, r1, r9, lsr #17
  48:	00000288 	andeq	r0, r0, r8, lsl #5
  4c:	00000001 	andeq	r0, r0, r1
  50:	000002c8 	andeq	r0, r0, r8, asr #5
  54:	00000001 	andeq	r0, r0, r1
  58:	000002d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
  5c:	80a8b0b0 	strhthi	fp, [r8], r0
  60:	000002e8 	andeq	r0, r0, r8, ror #5
  64:	80b108a9 	adcshi	r0, r1, r9, lsr #17
  68:	00000310 	andeq	r0, r0, r0, lsl r3
  6c:	0000000c 	andeq	r0, r0, ip
  70:	00000320 	andeq	r0, r0, r0, lsr #6
  74:	80b108a9 	adcshi	r0, r1, r9, lsr #17
  78:	00000344 	andeq	r0, r0, r4, asr #6
  7c:	00000018 	andeq	r0, r0, r8, lsl r0
  80:	00000354 	andeq	r0, r0, r4, asr r3
  84:	80b108a9 	adcshi	r0, r1, r9, lsr #17
  88:	00000378 	andeq	r0, r0, r8, ror r3
  8c:	00000024 	andeq	r0, r0, r4, lsr #32
  90:	00000388 	andeq	r0, r0, r8, lsl #7
  94:	80aab0b0 	strhthi	fp, [sl], r0
  98:	000003bc 			; <UNDEFINED> instruction: 0x000003bc
  9c:	80b108ab 	adcshi	r0, r1, fp, lsr #17
  a0:	00000408 	andeq	r0, r0, r8, lsl #8
  a4:	80b108a9 	adcshi	r0, r1, r9, lsr #17
  a8:	0000042c 	andeq	r0, r0, ip, lsr #8
  ac:	8002a9b0 			; <UNDEFINED> instruction: 0x8002a9b0
  b0:	00000474 	andeq	r0, r0, r4, ror r4
  b4:	8003a8b0 			; <UNDEFINED> instruction: 0x8003a8b0
  b8:	000004d4 	ldrdeq	r0, [r0], -r4
  bc:	80b108ab 	adcshi	r0, r1, fp, lsr #17
  c0:	00000508 	andeq	r0, r0, r8, lsl #10
  c4:	00000001 	andeq	r0, r0, r1
  c8:	00000514 	andeq	r0, r0, r4, lsl r5
  cc:	8004abb0 			; <UNDEFINED> instruction: 0x8004abb0
  d0:	00000568 	andeq	r0, r0, r8, ror #10
  d4:	00000001 	andeq	r0, r0, r1
  d8:	00000578 	andeq	r0, r0, r8, ror r5
  dc:	80b108a9 	adcshi	r0, r1, r9, lsr #17
  e0:	000005b4 			; <UNDEFINED> instruction: 0x000005b4
  e4:	00000001 	andeq	r0, r0, r1
  e8:	000005cc 	andeq	r0, r0, ip, asr #11
  ec:	00000001 	andeq	r0, r0, r1
  f0:	000005d8 	ldrdeq	r0, [r0], -r8
  f4:	00000001 	andeq	r0, r0, r1

Disassembly of section .comment:

00000000 <.comment>:
   0:	43434700 	movtmi	r4, #14080	; 0x3700
   4:	5528203a 	strpl	r2, [r8, #-58]!	; 0xffffffc6
   8:	746e7562 	strbtvc	r7, [lr], #-1378	; 0xfffffa9e
   c:	694c2f75 	stmdbvs	ip, {r0, r2, r4, r5, r6, r8, r9, sl, fp, sp}^
  10:	6f72616e 	svcvs	0x0072616e
  14:	342e3520 	strtcc	r3, [lr], #-1312	; 0xfffffae0
  18:	362d302e 	strtcc	r3, [sp], -lr, lsr #32
  1c:	6e756275 	mrcvs	2, 3, r6, cr5, cr5, {3}
  20:	7e317574 	mrcvc	5, 1, r7, cr1, cr4, {3}
  24:	302e3631 	eorcc	r3, lr, r1, lsr r6
  28:	31312e34 	teqcc	r1, r4, lsr lr
  2c:	2e352029 	cdpcs	0, 3, cr2, cr5, cr9, {1}
  30:	20302e34 	eorscs	r2, r0, r4, lsr lr
  34:	36313032 			; <UNDEFINED> instruction: 0x36313032
  38:	39303630 	ldmdbcc	r0!, {r4, r5, r9, sl, ip, sp}
	...

Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00003241 	andeq	r3, r0, r1, asr #4
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000028 	andeq	r0, r0, r8, lsr #32
  10:	412d3705 			; <UNDEFINED> instruction: 0x412d3705
  14:	070a0600 	streq	r0, [sl, -r0, lsl #12]
  18:	09010841 	stmdbeq	r1, {r0, r6, fp}
  1c:	12040a02 	andne	r0, r4, #8192	; 0x2000
  20:	15011404 	strne	r1, [r1, #-1028]	; 0xfffffbfc
  24:	18031701 	stmdane	r3, {r0, r8, r9, sl, ip}
  28:	1a011901 	bne	46434 <PCA9685::Write(unsigned short, unsigned short)+0x45e5c>
  2c:	1e011c02 	cdpne	12, 0, cr1, cr1, cr2, {0}
  30:	Address 0x00000030 is out of bounds.

